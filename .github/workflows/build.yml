name: build

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      node:
        required: false
        type: string
        default: ${{ vars.DEFAULT_NODE_VERSION }}
      CACHE_DIR:
        required: false
        type: string
        default: dist
      NPM_NETWORK_TIMEOUT:
        required: false
        type: number
        default: 12000

jobs:
  build:
    name: Build
    runs-on: ${{ inputs.os }}

    strategy:
      fail-fast: false

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Calculate build-cache key
        # Because the exact same hashFiles invocation produces different
        # results down the file
        id: build-cache-keys
        shell: bash
        run: |
          if command -v shasum; then sum() { shasum -a 256 "$@"; } ; else sum() { sha256sum "$@"; }; fi
          fragment="${{ runner.os }}-${{ inputs.node }}-${{ hashFiles('*.ts', '**/src/**', '**/.npmrc', '**/tsconfig*.json', '**/yarn.lock') }}-$(< package.json sum | command head -c8)"
          build_fragment="${{ hashFiles('.github/workflows/build.yml') }}"
          echo "build-key=build-${fragment}-${build_fragment}" | tee -a $GITHUB_OUTPUT

      - name: Restore build cache
        id: build_cache
        uses: actions/cache@v3
        with:
          path: ${{ inputs.CACHE_DIR }}
          key: ${{ steps.build-cache-keys.outputs.build-key }}

      - name: Install Node.js, NPM and Yarn
        if: steps.build_cache.outputs.cache-hit != 'true'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node }}
          cache: yarn

      - run: yarn install --frozen-lockfile --immutable --network-timeout ${{ inputs.NPM_NETWORK_TIMEOUT }}
        if: steps.build_cache.outputs.cache-hit != 'true'

      - run: yarn compile
        if: steps.build_cache.outputs.cache-hit != 'true'

      - name: Upload artifacts as build cache
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: compile-${{ inputs.os }}-${{ inputs.node }}
          path: ${{ inputs.CACHE_DIR }}
